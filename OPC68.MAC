	.TITLE	OPC68	6800 OP CODE PROCESSOR
;	1-JUL-78
;	15:30:00

	.PSECT OPC68

	.MACRO GENCAL NAME
	.GLOBL NAME
	.MACRO NAME
	CALL	NAME
	.ENDM NAME
	.ENDM GENCAL

	GENCAL STCODE
	GENCAL SETIMM
	GENCAL SAVREG
	GENCAL GETSYM
	GENCAL SETSYM
	GENCAL GETNB
	GENCAL TSTARG
	GENCAL GLBEXP
	GENCAL ABSEXP
	GENCAL RELEXP
	GENCAL	GETNB

	.MACRO AMM Z
	.IRP X,Z
AM.'X=..AMI
..AMI=..AMI+..AMI
	.RAD50	/X/
	.ENDR
	.ENDM AMM

..AMI=1
AMCHR:
	AMM	<<<I  >,<D  >,<X  >,<E  >,<S  >>>
	AMCSZE=.-AMCHR
	.WORD	0
	..AMI=1
	AMM	<<<I  >,<Z  >,<X  >,<A  >,<S  >>>	;ALTERNATE AM'S
	.WORD	0
	AM.SPC=..AMI

	AM.SPC=..AMI

	.MACRO	PUSH ARG
	MOV	ARG,-(SP)
	.ENDM

	.MACRO	PULL ARG
	MOV	(SP)+,ARG
	.ENDM

	.MACRO	ERROR CHR
	BIS	#ERR.'CHR,ERRBTS
	.ENDM

ERRI=1
	.IRPC	X,< ABDEILMNOPQRTUZ>
ERR.'X=ERRI
ERRI=ERRI+ERRI
	.ENDR
	.PAGE
	.GLOBL	CODROL,ROLBAS
OPCODE:				;PROCESS OPCODE
	MOV	#77776,PCRCNT	;LIST LOCATION OF FIRST BYTE ONLY
	INC	BYTMOD		;ALL OPCODES ARE BYTE MODE
	BIC	#-256.,R1	;GET VALUE
	MOV	VALUE,OPCMAP	;GET COPY OF AM
	MOV	R1,(R4)		;REPLACE VALUE
	SETIMM			;CONVERT TO OBJECT FORMAT
	STCODE			;INSERT INTO CODROL
	NOP
	CLR	(R4)		;RESET VALUE
	MOVB	OPCMAP+1,CRFDFL+1	;PASS DES FLAG
1$:	PULL	R1		;PRUNE STACK
	TST	OPCMAP		;ANY OPERANDS REQUIRED?
	BEQ	CPOPJ		;NOPE.DONE
	TSTARG			;SPACE TO OPERAND
	BNE	3$		;OPERAND PRESENT
	BIT	#AM.S,OPCMAP	;BRANCH INSTRUCTION?
	BEQ	2$		;NO
	JMP	BRERR		;DO BRANCH ERROR
2$:	CLR	BYTMOD		;2 BYTES OF ZEROES
	ERROR	A
	SETIMM
	STCODE
	MOV	#60,R0		;FORCE TO EXTENDED MODE
	BR	4$
3$:	CALL	OPRAND		;PROCESS OPERAND
4$:	MOV	ROLBAS+CODROL,R1	;ADDRESS OF OPCODE
	ADD	6(R1),R0	;UPDATE OPCODE TO CORRECT ADDRESS MODE
	MOVB	R0,6(R1)	;STUFF IT BACK
CPOPJ:	RETURN			;EXIT
	.PAGE
	.SBTTL	OPERAND PROCESSOR
	.ENABL	LSB

	.GLOBL	GETNB,ED.AMA,EDMASK,SYMBOL

GLBFLG	=100
RELFLG	=040
DEFFLG	=010

OPRAND:	SAVREG			;1 OR 2 OPERANDS REQUIRED
	CMP	#'#,R5		;IMMEADIATE MODE REQUEST?
	BNE	8$		;NOPE
	GETNB			;YES. SKIP OVER IT
	MOV	#1,R2		;SIGNAL IMMEADIATE MODE
	CLR	R1
	JMP	OPR0		;GO PROCESS AS RQD
8$:	GETSYM			;TRY FOR AM SYMBOL
	BNE	1$		;FOUND SOMETHING
5$:	SETSYM			;NO AM FOUND. MUST BE SOMETHING ELSE
	BIT	#AM.S,OPCMAP	;BRANCH?
	BEQ	2$		;NO
	JMP	BRTST
2$:	GLBEXP			;THIS GUY IS NOT AN AM
	PUSH	#20		;START WITH ZERO PAGE MODE
	CMP	#'(,R5		;(X) OPTION?
	BNE	23$		;NOPE
	GETNB			;GET THE CONTENTS
	CMP	#'X,R5		;BETTER BE AN 'X'
	BNE	18$		;IT AIN'T. Q ERROR
	GETNB			;NEXT
	CMP	#'),R5		;CLOSE?
	BNE	18$		;NOPE. Q ERROR
	GETNB			;SKIP OVER ')'
	BIT	#AM.X,OPCMAP	;LEGAL?
	BEQ	18$		;NOPE. ERROR
	MOV	#32.,(SP)	;X MODE
	BR	OPXIT		;DONE
23$:	BIT	#AM.D,OPCMAP	;ZERO PAGE ADDRESSING ALLOWED?
	BEQ	FABS		;NO. DEFAULT TO ABSOLUTE
	BIT	#ED.AMA,EDMASK	;DEFAULT OPTIONS?
	BNE	OPXIT		;NO. NORMAL PATH
	BIT	#ERR.U!ERR.A,ERRBTS	;ANY ERRORS?
	BNE	FABS		;YEP. FORCE EXTENDED MODE
	BITB	#GLBFLG!RELFLG,MODE	;IS IT EXTERNAL OR RELOCATABLE?
	BNE	FABS		;YES. FORCE EXTENDED
	BIT	#-256.,R0	;PAGE 0?
	BEQ	OPXIT		;YES.OK
	BR	FABS
18$:	ERROR	A
FABS:	MOV	#60,(SP)	;ABSOLUTE ADDRESS MODE
	CLR	BYTMOD		;SET TO WORD MODE
	BR	OPXIT

1$:	CLR	R1
15$:	MOV	#1,R2
4$:	TST	AMCHR(R1)	;END OF TABLE?
	BEQ	14$		;NOT AN AM SYMBOL
	CMP	R0,AMCHR(R1)	;AM?
	BEQ	13$		;YES
	ASL	R2
	INC	R1
	INC	R1
	BR	4$
14$:	CMP	R1,#AMCSZE	;ALTERNATE ADDRESS MODE SYMBOL SEARCH
	BNE	5$		;NO SYMBOL FOUND
	INC	R1		;SKIP OVER ZERO
	INC	R1
	BR	15$
13$:	CMP	R1,#AMCSZE
	BMI	16$
	SUB	#AMCSZE+2,R1
16$:	CMP	#',,R5		;NEXT THING A COMMA?
	BNE	5$		;NOPE. THIS IS A LABEL
	INC	EXPFLG		;EXPECT A COMMA
	TSTARG			;SKIP OVER AM SYMBOL
	.DSABL	LSB
OPR0:	BIT	R2,OPCMAP	;AM LEGAL FOR THIS INSTRUCTION?
	BNE	6$		;YES
	BIT	#AM.S,OPCMAP	;BRANCH INSTRUCTION?
	BNE	BRERR		;YEP. SET BRANCH ERROR
	PUSH	#60		;EXTENDED MODE
	ERROR	A		;ERROR
	BR	7$		;EXIT
6$:	ASL	R1		;COMPUTE OPCODE MODIFIER
	ASL	R1
	ASL	R1
	BIT	#AM.S,R2	;AM = 'S'
	BNE	BRANCH		;YES. PROCESS BRANCH
	PUSH	R1		;STUFF MODIFIER
	BIT	#AM.E,R2	;EXTENDED ADDRESS MODE?
	BNE	7$		;YES. FORCE TO WORD MODE
	BIT	#AM.I,R2	;IMMEADIATE MODE?
	BEQ	COMXIT		;NOPE. NORMAL INSTRUCTION
	BIT	#AM.SPC,OPCMAP	;LONG IMMEADIATE?
	BEQ	COMXIT
;	BNE	7$		;YES. FORCE TO WORD MODE

7$:	CLR	BYTMOD		;WORD MODE
COMXIT:	GLBEXP			;PROCESS OPERAND
OPXIT:	SETIMM
	STCODE
	PULL	R0
	RETURN
	.PAGE

	.ENABL	LSB
BRTST:	RELEXP			;CAN'T BE GLOBL
	SUB	CLCLOC,R0	;COMPUTE DISPLACMENT
	CLRB	MODE		;DISREGARD RELOCATION FLAGS
	CLR	RELLVL
	CMPB	SECTOR,CLCSEC	;CAN'T BRANCH ACROSS A CSECT
	BNE	BRERR		;THE DUMMY TRIED IT ANYWAY
	BR	BRCH
BRANCH:	ABSEXP			;GET NUMBER. (BR S,+-NUMBER)
BRCH:	SUB	#2,R0		;COMPUTE DISPLACEMENT
	BPL	3$
	ADD	#400,R0		;ALL 1'S IN HIGH BYTE?
	BMI	BRERR		;NO.ERROR OFFSET OUT OF RANGE
	TSTB	R0		;>128?
	BPL	BRERR		;ERROR. OFFSET OUT OF RANGE
5$:	BIC	#256.,R0	;RESET ANY HIGH BITS
	MOV	R0,VALUE
	BR	6$
3$:	BIT	#-128.,R0	;>127?
	BEQ	5$		;YEP.
BRERR:	MOV	#376,VALUE	;SET TO BR S,0
	ERROR	A
6$:	CLR	-(SP)		;NO OPCODE MODIFIER
	BR	OPXIT		;DONE

OPCMAP:	.BLKW	1
	.DSABL	LSB
	.END
